# gui/windows/edit_window.py
import tkinter as tk
from tkinter import ttk, messagebox
from typing import Dict, Any

# –ò–º–ø–æ—Ä—Ç—ã –∏–∑ –ø—Ä–æ–µ–∫—Ç–∞
from core.database import find_client
from config.settings import WINDOW_WIDTH, ENTRY_WIDTH


def open_edit_window(parent):
    """
    –û–∫–Ω–æ –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞ –ø–æ VIN
    :param parent: —Ä–æ–¥–∏—Ç–µ–ª—å—Å–∫–æ–µ –æ–∫–Ω–æ
    """
    window = tk.Toplevel(parent)
    window.title("‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö")
    window.geometry(f"{WINDOW_WIDTH}x600")
    window.resizable(False, False)
    window.transient(parent)
    window.grab_set()

    # –ü–æ–ª—è —Ñ–æ—Ä–º—ã (—Å–æ–æ—Ç–≤–µ—Ç—Å—Ç–≤—É—é—Ç –±–∞–∑–µ)
    fields_config = [
        ("–§–∞–º–∏–ª–∏—è", "–§–∞–º–∏–ª–∏—è"),
        ("–ò–º—è", "–ò–º—è"),
        ("–û—Ç—á–µ—Å—Ç–≤–æ", "–û—Ç—á–µ—Å—Ç–≤–æ"),
        ("–ú–∞—Ä–∫–∞ –∞–≤—Ç–æ", "–ú–∞—Ä–∫–∞ –∞–≤—Ç–æ"),
        ("VIN", "VIN"),
        ("–ò–Ω–¥–µ–∫—Å", "–ò–Ω–¥–µ–∫—Å"),
        ("–ê–¥—Ä–µ—Å", "–ê–¥—Ä–µ—Å"),
        ("–ü–∞—Å–ø–æ—Ä—Ç (—Å–µ—Ä–∏—è –∏ –Ω–æ–º–µ—Ä)", "–ü–∞—Å–ø–æ—Ä—Ç (—Å–µ—Ä–∏—è –∏ –Ω–æ–º–µ—Ä)"),
        ("–ö–µ–º –≤—ã–¥–∞–Ω", "–ö–µ–º –≤—ã–¥–∞–Ω"),
        ("–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏", "–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏"),
        ("–ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è", "–ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"),
        ("–¢–µ–ª–µ—Ñ–æ–Ω", "–¢–µ–ª–µ—Ñ–æ–Ω"),
        ("–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", "–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è"),
    ]

    # --- 1. –ü–æ–ª–µ –ø–æ–∏—Å–∫–∞ ---
    search_frame = ttk.Frame(window)
    search_frame.pack(pady=15, padx=20, fill="x")

    ttk.Label(search_frame, text="–í–≤–µ–¥–∏—Ç–µ VIN –¥–ª—è —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è:").pack(side="left")
    search_entry = ttk.Entry(search_frame, width=ENTRY_WIDTH)
    search_entry.pack(side="left", padx=10)
    search_entry.focus()

    entries = {}
    client_row_num = None
    original_data = {}

    def load_client():
        nonlocal client_row_num, original_data
        vin = search_entry.get().strip()
        if not vin:
            messagebox.showwarning("–í–Ω–∏–º–∞–Ω–∏–µ", "–í–≤–µ–¥–∏—Ç–µ VIN.")
            return

        # –ü–æ–∏—Å–∫ –ø–æ VIN
        client_data = find_client(vin)
        if client_data is None:
            messagebox.showerror("–û—à–∏–±–∫–∞", "–ö–ª–∏–µ–Ω—Ç —Å —Ç–∞–∫–∏–º VIN –Ω–µ –Ω–∞–π–¥–µ–Ω.")
            return

        client_row_num = int(client_data["‚Ññ"]) + 1  # Excel-—Å—Ç—Ä–æ–∫–∞ (—É—á–∏—Ç—ã–≤–∞—è –∑–∞–≥–æ–ª–æ–≤–æ–∫)
        original_data = client_data.to_dict()

        # –ó–∞–ø–æ–ª–Ω–µ–Ω–∏–µ –ø–æ–ª–µ–π
        for label_text, field_name in fields_config:
            entry = entries[field_name]  # –ò—Å–ø–æ–ª—å–∑—É–µ–º –∏–º—è –ø–æ–ª—è –∫–∞–∫ –∫–ª—é—á
            value = original_data.get(field_name, "")
            entry.delete(0, tk.END)
            entry.insert(0, str(value))

        # –†–∞–∑–±–ª–æ–∫–∏—Ä–æ–≤–∞—Ç—å –∫–Ω–æ–ø–∫—É —Å–æ—Ö—Ä–∞–Ω–µ–Ω–∏—è
        save_btn.config(state="normal")

    def save_changes():
        if client_row_num is None:
            return

        # –°–±–æ—Ä –Ω–æ–≤—ã—Ö –¥–∞–Ω–Ω—ã—Ö
        new_data = {}
        for label_text, field_name in fields_config:
            new_data[field_name] = entries[field_name].get().strip()

        # –ì–µ–Ω–µ—Ä–∞—Ü–∏—è –∏–º–µ–Ω–∏ –ø–∞–ø–∫–∏
        folder_name = f"{new_data['–§–∞–º–∏–ª–∏—è']}_{new_data['–ú–∞—Ä–∫–∞ –∞–≤—Ç–æ']}_vin {new_data['VIN']}_{new_data['–ò–Ω–¥–µ–∫—Å']}"

        # –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤ Excel
        try:
            from openpyxl import load_workbook
            from config.paths import CLIENTS_DB_PATH

            wb = load_workbook(CLIENTS_DB_PATH)
            ws = wb["Folder"]

            # –í—Å–µ –ø–æ–ª—è –≤ –ø—Ä–∞–≤–∏–ª—å–Ω–æ–º –ø–æ—Ä—è–¥–∫–µ
            ordered_fields = [
                "‚Ññ", "–§–∞–º–∏–ª–∏—è", "–ò–º—è", "–û—Ç—á–µ—Å—Ç–≤–æ", "–ú–∞—Ä–∫–∞ –∞–≤—Ç–æ", "VIN",
                "–ò–Ω–¥–µ–∫—Å", "–ü–∞–ø–∫–∞", "–ê–¥—Ä–µ—Å", "–ü–∞—Å–ø–æ—Ä—Ç (—Å–µ—Ä–∏—è –∏ –Ω–æ–º–µ—Ä)",
                "–ö–µ–º –≤—ã–¥–∞–Ω", "–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏", "–ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è",
                "–¢–µ–ª–µ—Ñ–æ–Ω", "–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è", "–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏"
            ]

            row_data = [
                original_data["‚Ññ"],  # ‚Ññ –Ω–µ –º–µ–Ω—è–µ–º
                new_data["–§–∞–º–∏–ª–∏—è"],
                new_data["–ò–º—è"],
                new_data["–û—Ç—á–µ—Å—Ç–≤–æ"],
                new_data["–ú–∞—Ä–∫–∞ –∞–≤—Ç–æ"],
                new_data["VIN"],
                new_data["–ò–Ω–¥–µ–∫—Å"],
                folder_name,
                new_data["–ê–¥—Ä–µ—Å"],
                new_data["–ü–∞—Å–ø–æ—Ä—Ç (—Å–µ—Ä–∏—è –∏ –Ω–æ–º–µ—Ä)"],
                new_data["–ö–µ–º –≤—ã–¥–∞–Ω"],
                new_data["–î–∞—Ç–∞ –≤—ã–¥–∞—á–∏"],
                new_data["–ö–æ–¥ –ø–æ–¥—Ä–∞–∑–¥–µ–ª–µ–Ω–∏—è"],
                new_data["–¢–µ–ª–µ—Ñ–æ–Ω"],
                new_data["–î–∞—Ç–∞ —Ä–æ–∂–¥–µ–Ω–∏—è"],
                original_data["–î–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –ø–∞–ø–∫–∏"]  # –¥–∞—Ç–∞ —Å–æ–∑–¥–∞–Ω–∏—è –Ω–µ –º–µ–Ω—è–µ—Ç—Å—è
            ]

            # –ü–µ—Ä–µ–∑–∞–ø–∏—Å—å —Å—Ç—Ä–æ–∫–∏
            for col, value in enumerate(row_data, 1):
                ws.cell(row=client_row_num, column=col, value=value)

            wb.save(CLIENTS_DB_PATH)
            messagebox.showinfo("–£—Å–ø–µ—Ö", "–î–∞–Ω–Ω—ã–µ —É—Å–ø–µ—à–Ω–æ –æ–±–Ω–æ–≤–ª–µ–Ω—ã!")
            window.destroy()

        except Exception as e:
            messagebox.showerror("–û—à–∏–±–∫–∞", f"–ù–µ —É–¥–∞–ª–æ—Å—å —Å–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è:\n{e}")

    # --- 2. –§–æ—Ä–º–∞ —Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏—è ---
    form_frame = ttk.Frame(window)
    form_frame.pack(pady=10, padx=20, fill="both", expand=True)

    for i, (label_text, field_name) in enumerate(fields_config):
        ttk.Label(form_frame, text=label_text + ":").grid(
            row=i, column=0, sticky="e", padx=(5, 5), pady=5
        )
        entry = ttk.Entry(form_frame, width=ENTRY_WIDTH)
        entry.grid(row=i, column=1, padx=(0, 10), pady=5, sticky="ew")
        entries[field_name] = entry

    # –ö–Ω–æ–ø–∫–∞ –ø–æ–∏—Å–∫–∞
    ttk.Button(window, text="üîç –ù–∞–π—Ç–∏ –∫–ª–∏–µ–Ω—Ç–∞", command=load_client).pack(pady=5)

    # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    button_frame = ttk.Frame(window)
    button_frame.pack(pady=15)

    ttk.Button(button_frame, text="–û—Ç–º–µ–Ω–∞", command=window.destroy).pack(side="left", padx=5)
    save_btn = ttk.Button(button_frame, text="‚úÖ –°–æ—Ö—Ä–∞–Ω–∏—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è", command=save_changes, state="disabled")
    save_btn.pack(side="left", padx=5)

    # –û–±—Ä–∞–±–æ—Ç–∫–∞ Enter
    search_entry.bind("<Return>", lambda event: load_client())
