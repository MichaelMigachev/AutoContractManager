# main.py
import tkinter as tk
from tkinter import messagebox
import os

# –ü—É—Ç–∏ –∫ –∫–æ—Ä–Ω—é –ø—Ä–æ–µ–∫—Ç–∞ –∏ –¥–æ–±–∞–≤–ª–µ–Ω–∏–µ –≤ sys.path (—á—Ç–æ–±—ã –∏–º–ø–æ—Ä—Ç—ã —Ä–∞–±–æ—Ç–∞–ª–∏)
import sys
from pathlib import Path

# –û–ø—Ä–µ–¥–µ–ª—è–µ–º –ø—É—Ç—å –∫ –ø—Ä–æ–µ–∫—Ç—É
PROJECT_ROOT = Path(__file__).parent
sys.path.append(str(PROJECT_ROOT))

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º GUI-–æ–∫–Ω–∞ –∏–∑ –º–æ–¥—É–ª–µ–π
from gui.windows.data_entry_window import open_data_entry_window
from gui.windows.contract_window import open_contract_window
from gui.windows.invoice_window import open_invoice_window
from gui.windows.edit_window import open_edit_window

# –ò–º–ø–æ—Ä—Ç–∏—Ä—É–µ–º —É—Ç–∏–ª–∏—Ç—ã
from core.utils import setup_logging
from config.paths import OUTPUT_DIR, CLIENTS_DB_PATH, CONTRACTS_DB_PATH


def create_directories():
    """–°–æ–∑–¥–∞—ë—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –ø–∞–ø–∫–∏, –µ—Å–ª–∏ –∏—Ö –Ω–µ—Ç"""
    dirs = [OUTPUT_DIR, "logs"]
    for d in dirs:
        os.makedirs(d, exist_ok=True)


def check_files():
    """–ü—Ä–æ–≤–µ—Ä—è–µ—Ç –Ω–∞–ª–∏—á–∏–µ –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã—Ö —Ñ–∞–π–ª–æ–≤"""
    missing = []
    if not os.path.exists(CLIENTS_DB_PATH):
        missing.append("data/database_of_contracts.xlsx")
    if not os.path.exists(CONTRACTS_DB_PATH):
        missing.append("data/contracts_registry.xlsx")
    return missing


def on_closing():
    """–î–µ–π—Å—Ç–≤–∏–µ –ø—Ä–∏ –∑–∞–∫—Ä—ã—Ç–∏–∏ –æ–∫–Ω–∞"""
    if messagebox.askokcancel("–í—ã—Ö–æ–¥", "–ó–∞–∫—Ä—ã—Ç—å –ø—Ä–æ–≥—Ä–∞–º–º—É?"):
        root.destroy()


def create_main_window():
    global root
    root = tk.Tk()
    root.title("AutoContractManager ‚Äî –û—Ñ–æ—Ä–º–ª–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–æ–≤")
    root.geometry("450x500")
    root.resizable(False, False)

    # –ù–∞—Å—Ç—Ä–æ–π–∫–∞ —Ñ–æ–Ω–∞ –∏ —à—Ä–∏—Ñ—Ç–æ–≤
    root.configure(bg="#f0f0f0")
    button_font = ("Arial", 12)

    # –ó–∞–≥–æ–ª–æ–≤–æ–∫
    tk.Label(
        root,
        text="–í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ",
        font=("Arial", 16, "bold"),
        bg="#f0f0f0",
        fg="#333"
    ).pack(pady=20)

    # –ö–Ω–æ–ø–∫–∏
    tk.Button(
        root,
        text="‚ûï –í–Ω–µ—Å–µ–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö –∫–ª–∏–µ–Ω—Ç–∞",
        font=button_font,
        width=30,
        height=2,
        command=lambda: open_data_entry_window(root)
    ).pack(pady=10)

    tk.Button(
        root,
        text="üìÑ –°–æ—Å—Ç–∞–≤–ª–µ–Ω–∏–µ –¥–æ–≥–æ–≤–æ—Ä–∞",
        font=button_font,
        width=30,
        height=2,
        command=lambda: open_contract_window(root)
    ).pack(pady=10)

    tk.Button(
        root,
        text="üí∞ –í—ã—Å—Ç–∞–≤–∏—Ç—å —Å—á—ë—Ç",
        font=button_font,
        width=30,
        height=2,
        command=lambda: open_invoice_window(root)
    ).pack(pady=10)

    tk.Button(
        root,
        text="‚úèÔ∏è –†–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –¥–∞–Ω–Ω—ã—Ö",
        font=button_font,
        width=30,
        height=2,
        command=lambda: open_edit_window(root)
    ).pack(pady=10)

    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –∑–∞–∫—Ä—ã—Ç–∏—è –æ–∫–Ω–∞
    root.protocol("WM_DELETE_WINDOW", on_closing)

    return root


def main():
    """–ì–ª–∞–≤–Ω–∞—è —Ñ—É–Ω–∫—Ü–∏—è –∑–∞–ø—É—Å–∫–∞ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è"""
    # –°–æ–∑–¥–∞—ë–º –ø–∞–ø–∫–∏
    # create_directories()

    # –õ–æ–≥–∏—Ä–æ–≤–∞–Ω–∏–µ
    # setup_logging()

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ñ–∞–π–ª—ã
    missing_files = check_files()
    if missing_files:
        messagebox.showwarning(
            "–í–Ω–∏–º–∞–Ω–∏–µ",
            f"–ù–µ —Ö–≤–∞—Ç–∞–µ—Ç —Ñ–∞–π–ª–æ–≤:\n" + "\n".join(missing_files) +
            "\n\n–°–æ–∑–¥–∞–π—Ç–µ –∏—Ö –≤—Ä—É—á–Ω—É—é –∏–ª–∏ —Å–∫–æ–ø–∏—Ä—É–π—Ç–µ —à–∞–±–ª–æ–Ω—ã."
        )

    # –°–æ–∑–¥–∞—ë–º –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
    global root
    root = create_main_window()

    # –ó–∞–ø—É—Å–∫–∞–µ–º —Ü–∏–∫–ª
    root.mainloop()


if __name__ == "__main__":
    main()
